name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on tags that start with "v"

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: ""
          - goos: linux
            goarch: arm64
            suffix: ""
          - goos: darwin
            goarch: amd64
            suffix: ""
          - goos: darwin
            goarch: arm64
            suffix: ""
          - goos: windows
            goarch: amd64
            suffix: ".exe"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21' # Adjust to your Go version

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          # Extract version from tag (e.g., v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/v}
          # Get current date
          BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          # Build with version info
          go build -v \
            -ldflags "-X main.version=${VERSION} -X main.commit=${GITHUB_SHA} -X main.date=${BUILD_DATE}" \
            -o "wordpress-plugin-registry-oras-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}" \
            ./main.go

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: wordpress-plugin-registry-oras-${{ matrix.goos }}-${{ matrix.goarch }}
          path: wordpress-plugin-registry-oras-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.suffix }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            wordpress-plugin-registry-oras-*/wordpress-plugin-registry-oras-*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
